/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.2/userguide/building_java_projects.html
 */

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    // Implement Gradle plugins
    java
    kotlin("jvm") version "1.4.32"

    id("com.github.johnrengelman.shadow") version "6.0.0"
    id("kr.entree.spigradle") version "2.2.3"

}

// Setting some variables for our plugin!
group = "com.dumbdogdiner"
version = "1.2-beta"

configure<JavaPluginExtension> {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

subprojects {

    apply(plugin = "java")
    apply(plugin = "kotlin")
    apply(plugin = "kr.entree.spigradle")

    repositories {
        // Default Gradle repositories
        jcenter()
        mavenCentral()

        maven (url = "https://maven.pkg.github.com/DumbDogDiner/stickyapi") {
            credentials {
                username = property("ghUser") as String
                password = property("ghPass") as String
            }
        }

        maven(url = "https://papermc.io/repo/repository/maven-public/")

        // This is for bStats... cuz PlaceholderAPI doesnt like
        // being shadow jar'd without it...
        maven (url = "https://repo.codemc.org/repository/maven-public")

        // Adding the Official Minecraft Repo
        maven (url = "https://libraries.minecraft.net/")

    }

    dependencies {
        // annotations
        annotationProcessor("org.projectlombok:lombok:1.18.16")
        compileOnly("org.projectlombok:lombok:1.18.16")

        // shared dependencies
        implementation("org.jetbrains:annotations:20.1.0")

        // runtime dependencies
        compileOnly("com.destroystokyo.paper:paper-api:1.16.4-R0.1-SNAPSHOT")

        // shaded dependencies
        implementation(platform("com.dumbdogdiner:stickyapi:3.0.1"))

        // Tests - JUnit 5
        testImplementation("junit:junit:4.12")

        testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.1")
        testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")

        // Tests - Mocking Suite (eg. mocking Bukkit for tests)
        testImplementation("org.mockito:mockito-core:3.7.7")
        testImplementation("com.github.seeseemelk:MockBukkit-v1.16:0.25.0")
    }
}

dependencies {
//    shadow group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
//    compileOnly 'me.clip:placeholderapi:2.10.9'
//    compileOnly 'org.apache.logging.log4j:log4j-core:2.3'
//
//    compileOnly 'io.netty:netty-all:4.1.24.Final'
//
//    compileOnly 'com.mojang:authlib:1.5.21'

    // used for debugging!
    //compileOnly files('libs/server.jar')
    //shadow files('libs/stickyapi-2.1.0.jar')


}

// vv Configuring the Gradle plugins below vv

tasks {

    register<ConfigureShadowRelocation>("relocateShadowJar") {
        target = project.tasks.shadowJar.get()
        prefix = "${group}.warrior.libs" // Default value is "shadow"
    }

    withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
        kotlinOptions.jvmTarget = "11"
    }

    build {
        dependsOn("shadowJar")
    }

    shadowJar {
        dependsOn("relocateShadowJar")
        archiveClassifier.set("")
        project.configurations.implementation.configure { isCanBeResolved = true }
        configurations = listOf(
            project.configurations.shadow.get()
        )

        val pkg = "$group.warrior.libs."

        exclude("generated/mojangles_width_data.json")
        relocate("com.zaxxer", "${pkg}com.zaxxer")
        relocate("org.postgresql", "${pkg}org.postgresql")
        relocate("org.postgresql", "${pkg}org.postgresql")

        minimize()
    }

    test {
        useJUnitPlatform()
    }


    spigot {
        name = "Warrior"
        description = "A fully customizable, class-based competitive FFA plugin."
        authors = mutableListOf("kokumaji")
        apiVersion = "1.13"

        softDepends = mutableListOf("Multiverse", "PlaceholderAPI")

        commands {
            create("debug") {
                usage = "/debug"
            }
        }
    }

}
